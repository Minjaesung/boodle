let slider1, slider2, slider3, slider4;
let button1, button2, button3;
let vibflag = 0,
  angflag = 0,
  surflag = 0;
let sigmoidValue = 0;
let mode = "none"; //vibeyes, angryeyes,surpriseeyes
let width = 80,
  height = 100,
  between = -10,
  positions = 400;
let colors = ["#F44336", "#9C27B0", "#2196F3", "#4CAF50", "#FF9800"];
let mainColor = colors[0];
let BIG = 0,
  maxBIG = 0;
let points = 4.0,
  angle = 360.0 / points;

function setup() {
  createCanvas(800, 800);
  slider1 = createSlider(10, 200, 100); // 도형의 가로 너비 조절
  slider1.position(650, 20); // width 슬라이더 위치
  slider1.input(updatewidth); // 슬라이더 업데이트
  slider2 = createSlider(10, 200, 100); // 도형의 세로 높이 조절
  slider2.position(650, 50); // height 슬라이더 위치
  slider2.input(updateHeight); // 슬라이더 업데이트
  slider3 = createSlider(-200, 200, 0); // 도형간의 간격 조절
  slider3.position(650, 80); // distance 슬라이더 위치
  slider3.input(updatebetween); // 슬라이더 업데이트
  slider4 = createSlider(10, 800, 400); // 도형의 위치 조절
  slider4.position(650, 110); // position 슬라이더 위치
  slider4.input(updatepositions); // 슬라이더 업데이트

  button1 = createButton("Mode 1"); // Mode1 Button
  button1.position(10, 10); // Mode1 Button1 버튼 위치
  button1.mousePressed(button1Pressed);

  button2 = createButton("Mode 2"); // Mode2 Button
  button2.position(10, 40); // Mode1 Button2 버튼 위치
  button2.mousePressed(button2Pressed);

  button3 = createButton("Mode 3"); // Mode3 Button
  button3.position(10, 70); // Mode3 Button1 버튼 위치
  button3.mousePressed(button3Pressed);
}

function draw() {
  background(220);
  fill(mainColor);
  rectMode(CENTER); //도형 중심 센터 설정
  noStroke();
  // 컬러 팔레트
  for (let i = 0; i < colors.length; i++) {
    fill(colors[i]);
    rect((i + 21.6) * 30, 160, 20, 20);
  }

  //text
  fill(0);
  textSize(15);
  text("width", 590, 36);
  text("height", 590, 66);
  text("distance", 590, 96);
  text("position", 590, 126);
  text("color", 590, 165);

  if (BIG < maxBIG) {
    BIG++; //big이 maxbig보다 작으면 크기가 최댓값이 될 때까지 증가
    sigmoidValue = sigmoid(map(surflag, 0, 20, 5, -5)); // map함수를 이용 surflag가 현재 0- 50(작동 시간)이고
    // 5-(-5)로 변환
  }
  console.log(mode); // 모드 확인
  modeSel(); //모드 최적화 함수
  
}

// 컬러 파레트
function mouseClicked() {
  for (let i = 0; i < colors.length; i++) {
    if (
      mouseX > (i + 21.5) * 30 - 10 &&
      mouseX < (i + 21.5) * 30 + 10 &&
      mouseY > 150 &&
      mouseY < 170
    ) {
      mainColor = colors[i];
    }
  }
}
// 슬라이드 업데이트
function updatewidth() {
  width = slider1.value();
} // 너비값이 슬라이드1 값에 반영
function updateHeight() {
  height = slider2.value();
} // 높이값이 슬라이드1 값에 반영
function updatebetween() {
  between = slider3.value();
} // 사이값이 슬라이드1 값에 반영
function updatepositions() {
  positions = slider4.value();
} // 위치값이 슬라이드1 값에 반영

// Draw 안에서 계속 그리는 코드 > 최적화 수정 완료, switch 함수 숙지하기(자주쓰임)
function modeSel() {
  switch (mode) {
    case "vibeyes": // vibeyes일경우 vibeyes함수를 소환
      vibeyes();
      break; // 나오기
    case "angryeyes":
      angryeyes();
      break;
    case "surpriseeyes":
      surpriseeyes();
      break;
    default:
      //그 외일때 (기본)
      fill(mainColor);
      rect(200 - between, 0 + positions, width, height, 50);
      rect(600 + between, 0 + positions, width, height, 50);
      break;
  }
}

// Mode 버튼 설정
function button1Pressed() {
  vibflag = 30; // 작동 시간 조절
  mode = "vibeyes"; // 버튼1을 누르면 vibeyes 작동
}

function button2Pressed() {
  angflag = 30; // 작동 시간 조절
  mode = "angryeyes"; // 버튼2를 누르면 angryeyes 작동
}

function button3Pressed() {
  surflag = 20; // 작동 시간 조절
  maxBIG = 50; // 눈 크기 최대값
  BIG = 0; // 크기 조절값 0 초기화
  mode = "surpriseeyes"; // 버튼3을 누르면 surpriseeyes 작동
}

// vibeyes > 눈떨림 표현
function vibeyes() {
  if (vibflag > 0) {
    translate(random(-5, 5), random(-5, 5));
    vibflag--;
  }
  if (vibflag == 0) mode = "none"; // angflag시간이 다되면 기본 모드 소환
  fill(mainColor);
  rect(200 - between, 0 + positions, width, height, 50);
  rect(600 + between, 0 + positions, width, height, 50);
}

// angryeyes > 찡그린 표정 수정 예정
function angryeyes() {
  if (angflag > 0) {
    fill(220);
    triangle(
      200 - between + width,
      -20 + positions + height,
      80 - between + width,
      -160 + positions + height,
      170 - between + width,
      -140 + positions + height
    );
    angflag--;
  } else if (angflag == 0) mode = "none"; // angflag시간이 다되면 기본 모드 소환
}

// surpriseeyes > 놀란 표정 비선형 함수(시그모이드)를 이용해 수정 완료
function surpriseeyes() {
  if (surflag > 0) {
    fill(mainColor);
    rect(
      200 - between,
      0 + positions,
      width + maxBIG * sigmoidValue,
      height + maxBIG * sigmoidValue,
      50
    );
    rect(
      600 + between,
      0 + positions,
      width + maxBIG * sigmoidValue,
      height + maxBIG * sigmoidValue,
      50
    );
    surflag--;
  } else if (surflag == 0) mode = "none"; // surflag시간이 다되면 기본 모드 소환
}
// 시그모이드 함수가 내장함수가 아니기 때문에, 시그모이드 함수 설정
function sigmoid(x) {
  return 1 / (1 + exp(-x));
}

